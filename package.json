{
  "name": "vscode-projen",
  "description": "Projen helpers and utilities",
  "repository": {
    "type": "git",
    "url": "https://github.com/MarkMcCulloh/vscode-projen.git"
  },
  "scripts": {
    "build": "npx projen build",
    "bump": "npx projen bump",
    "clobber": "npx projen clobber",
    "compile": "npx projen compile",
    "default": "npx projen default",
    "eject": "npx projen eject",
    "eslint": "npx projen eslint",
    "package": "npx projen package",
    "post-compile": "npx projen post-compile",
    "post-upgrade": "npx projen post-upgrade",
    "pre-compile": "npx projen pre-compile",
    "release": "npx projen release",
    "test": "npx projen test",
    "test:watch": "npx projen test:watch",
    "unbump": "npx projen unbump",
    "upgrade": "npx projen upgrade",
    "watch": "npx projen watch",
    "projen": "npx projen"
  },
  "devDependencies": {
    "@types/gunzip-maybe": "^1.4.2",
    "@types/jest": "^27.5.2",
    "@types/node": "^20",
    "@types/pacote": "^11.1.8",
    "@types/tar-stream": "^3.1.3",
    "@typescript-eslint/eslint-plugin": "^6",
    "@typescript-eslint/parser": "^6",
    "@vscode/vsce": "^2.26.1",
    "constructs": "^10.0.0",
    "esbuild": "^0.21.3",
    "eslint": "^8",
    "eslint-config-prettier": "^8.10.0",
    "eslint-import-resolver-typescript": "^2.7.1",
    "eslint-plugin-import": "^2.29.1",
    "eslint-plugin-prettier": "^4.2.1",
    "jest": "^29.7.0",
    "jest-junit": "^15",
    "prettier": "^2.8.8",
    "projen": "^0.81.15",
    "shx": "^0.3.4",
    "ts-jest": "^29.1.3",
    "ts-node": "^9",
    "typescript": "^5.4.5"
  },
  "dependencies": {
    "@types/vscode": "^1.89.0",
    "gunzip-maybe": "^1.4.2",
    "pacote": "^18.0.6",
    "registry-url": "^6.0.1",
    "tar-stream": "^3.1.7"
  },
  "engines": {
    "node": ">= 20.0.0",
    "vscode": "^1.62.0"
  },
  "main": "./lib/extension.js",
  "license": "Apache-2.0",
  "version": "0.0.0",
  "jest": {
    "testMatch": [
      "<rootDir>/src/**/__tests__/**/*.ts?(x)",
      "<rootDir>/@(test|src)/**/*(*.)@(spec|test).ts?(x)"
    ],
    "clearMocks": true,
    "collectCoverage": true,
    "coverageReporters": [
      "json",
      "lcov",
      "clover",
      "cobertura",
      "text"
    ],
    "coverageDirectory": "coverage",
    "coveragePathIgnorePatterns": [
      "/node_modules/"
    ],
    "testPathIgnorePatterns": [
      "/node_modules/"
    ],
    "watchPathIgnorePatterns": [
      "/node_modules/"
    ],
    "reporters": [
      "default",
      [
        "jest-junit",
        {
          "outputDirectory": "test-reports"
        }
      ]
    ],
    "transform": {
      "^.+\\.[t]sx?$": [
        "ts-jest",
        {
          "tsconfig": "tsconfig.dev.json"
        }
      ]
    }
  },
  "types": "lib/extension.d.ts",
  "displayName": "Projen",
  "icon": "resources/projen.png",
  "preview": false,
  "publisher": "MarkMcCulloh",
  "activationEvents": [
    "workspaceContains:.projen/**",
    "onView:projen",
    "onStartupFinished"
  ],
  "contributes": {
    "configuration": {
      "title": "Projen",
      "properties": {
        "projen.projects.externalLibraries": {
          "type": "string",
          "editPresentation": "multilineText",
          "default": "",
          "description": "When creating a new project, these external libraries will show as options.\nSeparate with newlines.\nMay use `|` after library name to add documentation (e.g. `vue-projen | Vue templates`)."
        },
        "projen.tasks.executeInTerminal": {
          "type": "boolean",
          "default": false,
          "description": "When running a task, use the integrated terminal instead of the special task window."
        },
        "projen.terminal.alwaysChangeToWorkspaceDirectory": {
          "type": "boolean",
          "default": true,
          "description": "Before running each command in the integrated terminal, always change the directory to the root."
        },
        "projen.managedFiles.decoration.enable": {
          "type": "boolean",
          "default": true,
          "description": "Label and darken projen-managed files in the explorer."
        },
        "projen.managedFiles.decoration.badge": {
          "type": "string",
          "default": "PJ",
          "description": "MUST BE < 3 CHARACTERS.\nText of the label applied to managed projen files. Can leave empty to remove."
        },
        "projen.managedFiles.decoration.themeColor": {
          "type": "string",
          "default": "gitDecoration.ignoredResourceForeground",
          "description": "ThemeColor id to apply to managed files. Leave empty to not apply any color."
        }
      }
    },
    "taskDefinitions": [
      {
        "type": "projen",
        "required": [
          "task"
        ],
        "when": "shellExecutionSupported && projen.inProject",
        "properties": {
          "task": {
            "type": "string",
            "description": "The projen task to execute"
          }
        }
      }
    ],
    "viewsContainers": {
      "activitybar": [
        {
          "id": "projen",
          "title": "Projen",
          "icon": "resources/dark/projen-outline.svg"
        }
      ]
    },
    "views": {
      "projen": [
        {
          "id": "projenProjects",
          "name": "Projects"
        }
      ]
    },
    "commands": [
      {
        "command": "projen.run",
        "title": "Run Projen",
        "icon": {
          "light": "resources/light/projen-outline.svg",
          "dark": "resources/dark/projen-outline.svg"
        }
      },
      {
        "command": "projen.runTask",
        "title": "Run Projen Task",
        "icon": "$(play)"
      },
      {
        "command": "projen.openProjenRc",
        "title": "Open Projen File",
        "icon": "$(gear)"
      },
      {
        "command": "projen.new",
        "title": "Generate Projen Project"
      }
    ],
    "menus": {
      "view/title": [
        {
          "command": "projen.run",
          "group": "navigation",
          "when": "projen.inProject == true && view == projenProjects"
        },
        {
          "command": "projen.openProjenRc",
          "group": "navigation",
          "when": "projen.inProject == true && view == projenProjects"
        },
        {
          "command": "projen.run",
          "group": "navigation",
          "when": "projen.inProject == true && activeViewlet == 'workbench.view.explorer'"
        },
        {
          "command": "projen.openProjenRc",
          "group": "navigation",
          "when": "projen.inProject == true && activeViewlet == 'workbench.view.explorer'"
        }
      ]
    }
  },
  "browser": "./lib/extension.js",
  "//": "~~ Generated by projen. To modify, edit .projenrc.ts and run \"npx projen\"."
}
